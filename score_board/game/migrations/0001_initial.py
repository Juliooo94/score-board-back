# Generated by Django 5.2 on 2025-05-13 13:47

import django.contrib.postgres.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("board", "Board"),
                            ("card", "Card"),
                            ("creative", "Creative"),
                            ("coop", "Cooperation"),
                            ("dexterity", "Dexterity"),
                            ("dice", "Dice"),
                            ("investigation", "Investigation"),
                            ("knowledge", "Knowledge"),
                            ("letter", "Letter"),
                            ("logic", "Logic"),
                            ("memory", "Memory"),
                            ("narrative", "Narrative"),
                            ("strategy", "Strategy"),
                            ("deck_building", "Deck Building"),
                            ("party", "Party"),
                        ],
                        default="board",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Mechanic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("deck_building", "Deck Building"),
                            ("worker_placement", "Worker Placement"),
                            ("tile_laying", "Tile Laying"),
                            ("dice_rolling", "Dice Rolling"),
                            ("auction", "Auction"),
                            ("hand_management", "Hand Management"),
                            ("area_control", "Area Control"),
                            ("simulation", "Simulation"),
                            ("memory", "Memory"),
                        ],
                        default="deck_building",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("min_player", models.PositiveIntegerField()),
                ("max_player", models.PositiveIntegerField()),
                (
                    "best_player_count",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveIntegerField(),
                        default=list,
                        size=None,
                    ),
                ),
                ("min_age", models.PositiveIntegerField()),
                ("image_url", models.CharField(blank=True, null=True)),
                (
                    "category",
                    models.ManyToManyField(related_name="game", to="game.category"),
                ),
                (
                    "mechanics",
                    models.ManyToManyField(related_name="game", to="game.mechanic"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
